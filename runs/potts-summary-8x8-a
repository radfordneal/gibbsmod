
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # PLOT DATA SUMMARY FROM 8x8 POTTS RUNS.
> 
> source("plot.r")
> source("potts-8x8.r")
> 
> args <- commandArgs(trailingOnly=TRUE)   # Run type from after --args
> if (length(args)==0)
+ { stop("Need run type as argument")
+ }
> rtype <- args[1]
> 
> if (length(args)<2)
+ { stop("Need number of runs as argument")
+ }
> nruns <- as.numeric(args[2])             # Number of runs to use
> runs <- 0:(nruns-1)
> 
> 
> # PRINT SELF-TRANSITION DATA.
> 
> print (read_self (paste0("runs/potts-res-8x8-",rtype), runs))
$self
        Random Sequential Shuffled Sequential Checkerboard Random order
ST   0.2322188  0.2296914           0.2292988    0.2267207    0.2287207
DST  0.2280254  0.2305137           0.2298828    0.2279766    0.2285176
UST  0.2283281  0.2275215           0.2286836    0.2289961    0.2298047
UDST 0.2264883  0.2297480           0.2269023    0.2303262    0.2291309
HST  0.2263555  0.2283398           0.2299902    0.2288496    0.2290937
OHST 0.2273945  0.2270234           0.2271699    0.2276074    0.2293594
     Random order x4
ST         0.2317734
DST        0.2262441
UST        0.2300371
UDST       0.2292930
HST        0.2298691
OHST       0.2297402

$prhalf
        Random Sequential Shuffled Sequential Checkerboard Random order
ST   0.4070059  0.4030645           0.4023223    0.3998242    0.4018437
DST  0.4027539  0.4041113           0.4033887    0.4013164    0.4023027
UST  0.4009590  0.4011680           0.4021484    0.4021777    0.4034473
UDST 0.4002031  0.4035352           0.4007676    0.4045645    0.4029727
HST  0.3992129  0.4015352           0.4036797    0.4019453    0.4034043
OHST 0.3992480  0.4002363           0.4014824    0.4009277    0.4043555
     Random order x4
ST         0.4058535
DST        0.3997891
UST        0.4031074
UDST       0.4026465
HST        0.4022988
OHST       0.4041992

$self_pr
        Random Sequential Shuffled Sequential Checkerboard Random order
ST   0.2322573  0.2294599           0.2287991    0.2268699    0.2284188
DST  0.2284188  0.2302904           0.2295465    0.2281401    0.2287722
UST  0.2282996  0.2277162           0.2283953    0.2289427    0.2296442
UDST 0.2270129  0.2294416           0.2272016    0.2303702    0.2291136
HST  0.2266285  0.2285583           0.2296411    0.2283828    0.2292446
OHST 0.2268890  0.2272965           0.2276018    0.2279660    0.2295068
     Random order x4
ST         0.2312966
DST        0.2267218
UST        0.2296951
UDST       0.2287900
HST        0.2291175
OHST       0.2301882

$min_self
        Random Sequential Shuffled Sequential Checkerboard Random order
ST   0.2320778  0.2293078           0.2287558    0.2272354    0.2285866
DST  0.2288683  0.2300843           0.2294350    0.2279925    0.2287803
UST  0.2282617  0.2279971           0.2286313    0.2287148    0.2295931
UDST 0.2271673  0.2293978           0.2275613    0.2304417    0.2291909
HST  0.2265884  0.2284386           0.2296724    0.2285228    0.2294813
OHST 0.2267932  0.2273718           0.2278738    0.2279082    0.2300416
     Random order x4
ST         0.2309649
DST        0.2270629
UST        0.2296456
UDST       0.2289526
HST        0.2287296
OHST       0.2301575

> 
> 
> # COMPUTE AND PLOT THE ASYMPTOTIC VARIANCES.
> 
> width <- 7
> hght <- 9
> 
> asv <- NULL
> 
> for (runn in runs)
+ {
+   load (paste0("runs/potts-res-8x8-",rtype,runn))
+   methods <- rownames(res)
+   scans <- colnames(res)
+ 
+   asymvar <- list()
+ 
+   pdf(paste0("runs/potts-8x8-cnt1-",rtype,runn,".pdf"),width=width,height=hght)
+   
+   asymvar <- c (asymvar, cnt1=list(
+    acv_plots ("Count of 1s", methods, scans,
+               maxlag=32.5*n, maxvar=70, mean_to_use=n/NV,
+               data=res, sub="cnt1"
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-sumsqcnt-",rtype,runn,".pdf"),
+               width=width,height=hght)
+   
+   asymvar <- c (asymvar, sumsqcnt=list(
+    acv_plots ("sum squared counts", methods, scans,
+               maxlag=16.5*n, maxvar=62000, 
+               data=res, sub="sumsqcnt"
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-eq-",rtype,runn,".pdf"),width=width,height=hght)
+   
+   asymvar <- c (asymvar, eq=list(
+    acv_plots ("Equal neighbors", methods, scans,
+               maxlag=13.5*n, maxvar=70, 
+               data=res, sub="eq"
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-cnt1t-",rtype,runn,".pdf"),width=width,height=hght)
+   
+   asymvar <- c (asymvar, cnt1=list(
+    acv_plots ("Count of 1s", methods, scans,
+               maxlag=32, maxvar=70, mean_to_use=n/NV,
+               data=res, sub="cnt1", thin=n
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-sumsqcntt-",rtype,runn,".pdf"),
+               width=width,height=hght)
+   
+   asymvar <- c (asymvar, sumsqcnt=list(
+    acv_plots ("sum squared counts", methods, scans,
+               maxlag=16, maxvar=62000, 
+               data=res, sub="sumsqcnt", thin=n
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-eqt-",rtype,runn,".pdf"),width=width,height=hght)
+   
+   asymvar <- c (asymvar, eq=list(
+    acv_plots ("Equal neighbors", methods, scans,
+               maxlag=13, maxvar=70, 
+               data=res, sub="eq", thin=n
+              )))
+   
+   dev.off()
+ 
+   if (is.null(asv))
+   { asv <- rep (list(array(0,c(dim(asymvar[[1]]),length(runs)))),
+                 length(asymvar))
+     names(asv) <- names(asymvar)
+     for (i in 1:length(asymvar))
+     { rownames(asv[[i]]) <- rownames(asymvar[[i]])
+       colnames(asv[[i]]) <- colnames(asymvar[[i]])
+     }
+   }
+ 
+   for (i in 1:length(asymvar))
+   { asv[[i]][,,runn+1] <- asymvar[[i]]
+   }
+ }
> 
> 
> # PLOT SUMMARIES.
> 
> pdf(paste0("runs/potts-summary-8x8-",rtype,".pdf"),width=6.5,height=8.5)
> 
> summary_plot (asv,
+               methods=rownames(res),
+               orders=colnames(res),
+               ranges=list (cnt1=c(9000,72000,10000),  # Asymp var range & step
+                            sumsqcnt=c(4.5e6,42e6,10e6),
+                            eq=c(5000,26000,5000)),
+               qnames=c(cnt1="Count of 1s",             # Names for display
+                        sumsqcnt="Sum squared counts",
+                        eq="Equal neighbors"))
methods: ST DST UST UDST HST OHST 
> 
> dev.off()
null device 
          1 
> 
