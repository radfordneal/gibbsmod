
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # PLOT DATA SUMMARY FROM 8x8 POTTS RUNS.
> 
> source("plot.r")
> source("potts-8x8.r")
> 
> args <- commandArgs(trailingOnly=TRUE)   # Run type from after --args
> if (length(args)==0)
+ { stop("Need run type as argument")
+ }
> rtype <- args[1]
> 
> if (length(args)<2)
+ { stop("Need number of runs as argument")
+ }
> nruns <- as.numeric(args[2])             # Number of runs to use
> runs <- 0:(nruns-1)
> 
> 
> # PRINT SELF-TRANSITION DATA.
> 
> print (read_self (paste0("runs/potts-res-8x8-",rtype), runs))
$self
        Random Sequential Shuffled Sequential Checkerboard Random order
ST   0.2286994  0.2290055           0.2288652    0.2287192    0.2284934
DST  0.2287918  0.2288710           0.2289421    0.2287704    0.2287889
UST  0.2285785  0.2285320           0.2285558    0.2289387    0.2289649
UDST 0.2288758  0.2286429           0.2290358    0.2288116    0.2286468
HST  0.2286446  0.2286862           0.2287790    0.2288014    0.2289026
OHST 0.2290472  0.2288976           0.2290139    0.2288194    0.2287829
     Random order x4
ST         0.2289243
DST        0.2286201
UST        0.2289073
UDST       0.2288449
HST        0.2287211
OHST       0.2287847

$prhalf
        Random Sequential Shuffled Sequential Checkerboard Random order
ST   0.4022447  0.4025649           0.4024708    0.4022028    0.4019090
DST  0.4023476  0.4023676           0.4024983    0.4022416    0.4023150
UST  0.4020486  0.4021006           0.4020337    0.4024854    0.4025554
UDST 0.4024716  0.4022381           0.4026481    0.4024784    0.4020396
HST  0.4021201  0.4021123           0.4022560    0.4022964    0.4024797
OHST 0.4027022  0.4025458           0.4025375    0.4023555    0.4022856
     Random order x4
ST         0.4025294
DST        0.4021642
UST        0.4024474
UDST       0.4023964
HST        0.4021991
OHST       0.4023505

$self_pr
        Random Sequential Shuffled Sequential Checkerboard Random order
ST   0.2287310  0.2289771           0.2288553    0.2286918    0.2285133
DST  0.2288039  0.2288780           0.2289008    0.2287746    0.2288050
UST  0.2285999  0.2285949           0.2285604    0.2289367    0.2289573
UDST 0.2288910  0.2287150           0.2290121    0.2288459    0.2286363
HST  0.2286513  0.2286414           0.2287707    0.2287724    0.2288885
OHST 0.2290180  0.2289175           0.2289616    0.2288065    0.2287606
     Random order x4
ST         0.2289163
DST        0.2286706
UST        0.2288877
UDST       0.2288223
HST        0.2287159
OHST       0.2288030

$min_self
        Random Sequential Shuffled Sequential Checkerboard Random order
ST   0.2287485  0.2289816           0.2288681    0.2287100    0.2285341
DST  0.2287892  0.2288457           0.2288968    0.2287504    0.2287867
UST  0.2285918  0.2286255           0.2285974    0.2289138    0.2289528
UDST 0.2288941  0.2287350           0.2290065    0.2288982    0.2286250
HST  0.2286469  0.2286444           0.2287535    0.2287646    0.2288718
OHST 0.2290244  0.2289361           0.2289354    0.2288066    0.2287598
     Random order x4
ST         0.2289042
DST        0.2287023
UST        0.2288690
UDST       0.2288401
HST        0.2287239
OHST       0.2288073

> 
> 
> # COMPUTE AND PLOT THE ASYMPTOTIC VARIANCES.
> 
> width <- 7
> hght <- 9
> 
> asv <- NULL
> 
> for (runn in runs)
+ {
+   load (paste0("runs/potts-res-8x8-",rtype,runn))
+   methods <- rownames(res)
+   scans <- colnames(res)
+ 
+   asymvar <- list()
+ 
+   pdf(paste0("runs/potts-8x8-cnt1-",rtype,runn,".pdf"),width=width,height=hght)
+   
+   asymvar <- c (asymvar, cnt1=list(
+    acv_plots ("Count of 1s", methods, scans,
+               maxlag=32.5*n, maxvar=70, mean_to_use=n/NV,
+               data=res, sub="cnt1"
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-sumsqcnt-",rtype,runn,".pdf"),
+               width=width,height=hght)
+   
+   asymvar <- c (asymvar, sumsqcnt=list(
+    acv_plots ("sum squared counts", methods, scans,
+               maxlag=16.5*n, maxvar=62000, 
+               data=res, sub="sumsqcnt"
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-eq-",rtype,runn,".pdf"),width=width,height=hght)
+   
+   asymvar <- c (asymvar, eq=list(
+    acv_plots ("Equal neighbors", methods, scans,
+               maxlag=13.5*n, maxvar=70, 
+               data=res, sub="eq"
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-cnt1t-",rtype,runn,".pdf"),width=width,height=hght)
+   
+   asymvar <- c (asymvar, cnt1=list(
+    acv_plots ("Count of 1s", methods, scans,
+               maxlag=32, maxvar=70, mean_to_use=n/NV,
+               data=res, sub="cnt1", thin=n
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-sumsqcntt-",rtype,runn,".pdf"),
+               width=width,height=hght)
+   
+   asymvar <- c (asymvar, sumsqcnt=list(
+    acv_plots ("sum squared counts", methods, scans,
+               maxlag=16, maxvar=62000, 
+               data=res, sub="sumsqcnt", thin=n
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-eqt-",rtype,runn,".pdf"),width=width,height=hght)
+   
+   asymvar <- c (asymvar, eq=list(
+    acv_plots ("Equal neighbors", methods, scans,
+               maxlag=13, maxvar=70, 
+               data=res, sub="eq", thin=n
+              )))
+   
+   dev.off()
+ 
+   if (is.null(asv))
+   { asv <- rep (list(array(0,c(dim(asymvar[[1]]),length(runs)))),
+                 length(asymvar))
+     names(asv) <- names(asymvar)
+     for (i in 1:length(asymvar))
+     { rownames(asv[[i]]) <- rownames(asymvar[[i]])
+       colnames(asv[[i]]) <- colnames(asymvar[[i]])
+     }
+   }
+ 
+   for (i in 1:length(asymvar))
+   { asv[[i]][,,runn+1] <- asymvar[[i]]
+   }
+ }
> 
> 
> # PLOT SUMMARIES.
> 
> pdf(paste0("runs/potts-summary-8x8-",rtype,".pdf"),width=6.5,height=8.5)
> 
> summary_plot (asv,
+               methods=rownames(res),
+               orders=colnames(res),
+               ranges=list (cnt1=c(9000,72000,10000),  # Asymp var range & step
+                            sumsqcnt=c(4.5e6,42e6,10e6),
+                            eq=c(5000,26000,5000)),
+               qnames=c(cnt1="Count of 1s",             # Names for display
+                        sumsqcnt="Sum squared counts",
+                        eq="Equal neighbors"))
methods: ST DST UST UDST HST OHST 
> 
> dev.off()
null device 
          1 
> 
