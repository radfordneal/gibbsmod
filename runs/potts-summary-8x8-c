
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # PLOT DATA SUMMARY FROM 8x8 POTTS RUNS.
> 
> source("plot.r")
> source("potts-8x8.r")
> 
> args <- commandArgs(trailingOnly=TRUE)   # Run type from after --args
> if (length(args)==0)
+ { stop("Need run type as argument")
+ }
> rtype <- args[1]
> 
> if (length(args)<2)
+ { stop("Need number of runs as argument")
+ }
> nruns <- as.numeric(args[2])             # Number of runs to use
> runs <- 0:(nruns-1)
> 
> 
> # PRINT SELF-TRANSITION DATA.
> 
> print (read_self (paste0("runs/potts-res-8x8-",rtype), runs))
$self
         Random Sequential Shuffled Sequential Checkerboard Random order
UNAM  0.3131973  0.3142656           0.3150938    0.3130977    0.3133848
ZDNAM 0.2302891  0.2280137           0.2287305    0.2298789    0.2270352
ST    0.2290703  0.2307285           0.2310430    0.2270605    0.2288965
UDST  0.2265742  0.2268965           0.2279844    0.2278535    0.2278320
FSS   0.2337285  0.2370215           0.2342852    0.2366348    0.2343750
ZFSS  0.2271660  0.2271289           0.2306895    0.2288184    0.2297754
      Random order x4
UNAM        0.3133711
ZDNAM       0.2280918
ST          0.2293086
UDST        0.2270879
FSS         0.2362656
ZFSS        0.2275312

$prhalf
         Random Sequential Shuffled Sequential Checkerboard Random order
UNAM  0.4002734  0.4028398           0.4036719    0.4023125    0.4017969
ZDNAM 0.4046699  0.4010410           0.4024570    0.4026270    0.3997461
ST    0.4020371  0.4046152           0.4045020    0.4013359    0.4014238
UDST  0.4006133  0.4001016           0.4022988    0.4014805    0.4019258
FSS   0.3995937  0.4036289           0.4010156    0.4032734    0.4005039
ZFSS  0.4013809  0.4000254           0.4048828    0.4025156    0.4034805
      Random order x4
UNAM        0.4007832
ZDNAM       0.4018574
ST          0.4025547
UDST        0.4006406
FSS         0.4030020
ZFSS        0.4006543

$self_pr
         Random Sequential Shuffled Sequential Checkerboard Random order
UNAM  0.3128682  0.3142422           0.3148705    0.3133735    0.3135203
ZDNAM 0.2301704  0.2280646           0.2285281    0.2293486    0.2272205
ST    0.2289188  0.2306182           0.2306144    0.2276526    0.2284070
UDST  0.2272876  0.2273213           0.2286046    0.2279616    0.2283143
FSS   0.2337694  0.2367043           0.2346728    0.2362047    0.2343462
ZFSS  0.2278199  0.2271829           0.2302298    0.2289480    0.2298968
      Random order x4
UNAM        0.3128737
ZDNAM       0.2281668
ST          0.2290736
UDST        0.2274680
FSS         0.2360251
ZFSS        0.2275703

$min_self
         Random Sequential Shuffled Sequential Checkerboard Random order
UNAM  0.2275376  0.2291621           0.2297331    0.2286668    0.2283127
ZDNAM 0.2302266  0.2278369           0.2286501    0.2290462    0.2271905
ST    0.2288714  0.2305598           0.2304874    0.2280003    0.2281887
UDST  0.2274680  0.2274135           0.2288436    0.2282230    0.2284118
FSS   0.2268563  0.2295637           0.2277661    0.2295180    0.2274393
ZFSS  0.2282979  0.2273081           0.2300386    0.2292058    0.2298102
      Random order x4
UNAM        0.2275836
ZDNAM       0.2282439
ST          0.2290314
UDST        0.2276772
FSS         0.2293187
ZFSS        0.2275934

> 
> 
> # COMPUTE AND PLOT THE ASYMPTOTIC VARIANCES.
> 
> width <- 7
> hght <- 9
> 
> asv <- NULL
> 
> for (runn in runs)
+ {
+   load (paste0("runs/potts-res-8x8-",rtype,runn))
+   methods <- rownames(res)
+   scans <- colnames(res)
+ 
+   asymvar <- list()
+ 
+   pdf(paste0("runs/potts-8x8-cnt1-",rtype,runn,".pdf"),width=width,height=hght)
+   
+   asymvar <- c (asymvar, cnt1=list(
+    acv_plots ("Count of 1s", methods, scans,
+               maxlag=32.5*n, maxvar=70, mean_to_use=n/NV,
+               data=res, sub="cnt1"
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-sumsqcnt-",rtype,runn,".pdf"),
+               width=width,height=hght)
+   
+   asymvar <- c (asymvar, sumsqcnt=list(
+    acv_plots ("sum squared counts", methods, scans,
+               maxlag=16.5*n, maxvar=62000, 
+               data=res, sub="sumsqcnt"
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-eq-",rtype,runn,".pdf"),width=width,height=hght)
+   
+   asymvar <- c (asymvar, eq=list(
+    acv_plots ("Equal neighbors", methods, scans,
+               maxlag=13.5*n, maxvar=70, 
+               data=res, sub="eq"
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-cnt1t-",rtype,runn,".pdf"),width=width,height=hght)
+   
+   asymvar <- c (asymvar, cnt1=list(
+    acv_plots ("Count of 1s", methods, scans,
+               maxlag=32, maxvar=70, mean_to_use=n/NV,
+               data=res, sub="cnt1", thin=n
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-sumsqcntt-",rtype,runn,".pdf"),
+               width=width,height=hght)
+   
+   asymvar <- c (asymvar, sumsqcnt=list(
+    acv_plots ("sum squared counts", methods, scans,
+               maxlag=16, maxvar=62000, 
+               data=res, sub="sumsqcnt", thin=n
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-eqt-",rtype,runn,".pdf"),width=width,height=hght)
+   
+   asymvar <- c (asymvar, eq=list(
+    acv_plots ("Equal neighbors", methods, scans,
+               maxlag=13, maxvar=70, 
+               data=res, sub="eq", thin=n
+              )))
+   
+   dev.off()
+ 
+   if (is.null(asv))
+   { asv <- rep (list(array(0,c(dim(asymvar[[1]]),length(runs)))),
+                 length(asymvar))
+     names(asv) <- names(asymvar)
+     for (i in 1:length(asymvar))
+     { rownames(asv[[i]]) <- rownames(asymvar[[i]])
+       colnames(asv[[i]]) <- colnames(asymvar[[i]])
+     }
+   }
+ 
+   for (i in 1:length(asymvar))
+   { asv[[i]][,,runn+1] <- asymvar[[i]]
+   }
+ }
> 
> 
> # PLOT SUMMARIES.
> 
> pdf(paste0("runs/potts-summary-8x8-",rtype,".pdf"),width=6.5,height=8.5)
> 
> summary_plot (asv,
+               methods=rownames(res),
+               orders=colnames(res),
+               ranges=list (cnt1=c(9000,72000,10000),  # Asymp var range & step
+                            sumsqcnt=c(4.5e6,42e6,10e6),
+                            eq=c(5000,26000,5000)),
+               qnames=c(cnt1="Count of 1s",             # Names for display
+                        sumsqcnt="Sum squared counts",
+                        eq="Equal neighbors"))
methods: UNAM ZDNAM ST UDST FSS ZFSS 
> 
> dev.off()
null device 
          1 
> 
