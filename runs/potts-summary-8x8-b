
R version 4.1.2 (2021-11-01) -- "Bird Hippie"
Copyright (C) 2021 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> # PLOT DATA SUMMARY FROM 8x8 POTTS RUNS.
> 
> source("plot.r")
> source("potts-8x8.r")
> 
> args <- commandArgs(trailingOnly=TRUE)   # Run type from after --args
> if (length(args)==0)
+ { stop("Need run type as argument")
+ }
> rtype <- args[1]
> 
> if (length(args)<2)
+ { stop("Need number of runs as argument")
+ }
> nruns <- as.numeric(args[2])             # Number of runs to use
> runs <- 0:(nruns-1)
> 
> 
> # PRINT SELF-TRANSITION DATA.
> 
> print (read_self (paste0("runs/potts-res-8x8-",rtype), runs))
$self
         Random Sequential Shuffled Sequential Checkerboard Random order
GS    0.4600469  0.4589414           0.4583086    0.4556367    0.4597246
MHGS  0.3327480  0.3322910           0.3289727    0.3298574    0.3313633
UNAM  0.3143691  0.3177363           0.3144102    0.3140762    0.3166484
DNAM  0.2427598  0.2393555           0.2388262    0.2391016    0.2413945
UDNAM 0.2755820  0.2773672           0.2796934    0.2795059    0.2784004
ZDNAM 0.2288652  0.2293789           0.2289434    0.2279687    0.2258789
      Random order x4
GS          0.4609805
MHGS        0.3321211
UNAM        0.3148477
DNAM        0.2366973
UDNAM       0.2750957
ZDNAM       0.2272246

$prhalf
         Random Sequential Shuffled Sequential Checkerboard Random order
GS    0.4011035  0.4010859           0.3997559    0.3971953    0.4008027
MHGS  0.4056582  0.4030566           0.4002852    0.4011387    0.4003262
UNAM  0.4045176  0.4070840           0.4041953    0.4015547    0.4050117
DNAM  0.4059668  0.4016738           0.4013770    0.4012480    0.4043184
UDNAM 0.3983281  0.4025742           0.4063457    0.4055176    0.4041191
ZDNAM 0.4023105  0.4029004           0.4028184    0.4011074    0.3984687
      Random order x4
GS          0.4031836
MHGS        0.4039355
UNAM        0.4029121
DNAM        0.3982266
UDNAM       0.4012617
ZDNAM       0.4004082

$self_pr
         Random Sequential Shuffled Sequential Checkerboard Random order
GS    0.4593424  0.4586518           0.4588089    0.4571273    0.4589098
MHGS  0.3332540  0.3318962           0.3300604    0.3301780    0.3307274
UNAM  0.3147008  0.3171662           0.3148904    0.3134624    0.3154615
DNAM  0.2427482  0.2394383           0.2391090    0.2390259    0.2412278
UDNAM 0.2750789  0.2771161           0.2793098    0.2791329    0.2779464
ZDNAM 0.2287107  0.2292941           0.2290343    0.2276624    0.2261804
      Random order x4
GS          0.4605169
MHGS        0.3324859
UNAM        0.3144724
DNAM        0.2368160
UDNAM       0.2758183
ZDNAM       0.2273466

$min_self
         Random Sequential Shuffled Sequential Checkerboard Random order
GS    0.2277551  0.2277287           0.2273776    0.2252464    0.2278497
MHGS  0.2312566  0.2293597           0.2274605    0.2278554    0.2272914
UNAM  0.2303147  0.2319240           0.2303031    0.2282773    0.2306999
DNAM  0.2314476  0.2283748           0.2282187    0.2280157    0.2300175
UDNAM 0.2265472  0.2290378           0.2315879    0.2310175    0.2299388
ZDNAM 0.2285841  0.2292724           0.2291021    0.2279165    0.2263343
      Random order x4
GS          0.2294230
MHGS        0.2298595
UNAM        0.2292978
DNAM        0.2261280
UDNAM       0.2279744
ZDNAM       0.2277599

> 
> 
> # COMPUTE AND PLOT THE ASYMPTOTIC VARIANCES.
> 
> width <- 7
> hght <- 9
> 
> asv <- NULL
> 
> for (runn in runs)
+ {
+   load (paste0("runs/potts-res-8x8-",rtype,runn))
+   methods <- rownames(res)
+   scans <- colnames(res)
+ 
+   asymvar <- list()
+ 
+   pdf(paste0("runs/potts-8x8-cnt1-",rtype,runn,".pdf"),width=width,height=hght)
+   
+   asymvar <- c (asymvar, cnt1=list(
+    acv_plots ("Count of 1s", methods, scans,
+               maxlag=32.5*n, maxvar=70, mean_to_use=n/NV,
+               data=res, sub="cnt1"
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-sumsqcnt-",rtype,runn,".pdf"),
+               width=width,height=hght)
+   
+   asymvar <- c (asymvar, sumsqcnt=list(
+    acv_plots ("sum squared counts", methods, scans,
+               maxlag=16.5*n, maxvar=62000, 
+               data=res, sub="sumsqcnt"
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-eq-",rtype,runn,".pdf"),width=width,height=hght)
+   
+   asymvar <- c (asymvar, eq=list(
+    acv_plots ("Equal neighbors", methods, scans,
+               maxlag=13.5*n, maxvar=70, 
+               data=res, sub="eq"
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-cnt1t-",rtype,runn,".pdf"),width=width,height=hght)
+   
+   asymvar <- c (asymvar, cnt1=list(
+    acv_plots ("Count of 1s", methods, scans,
+               maxlag=32, maxvar=70, mean_to_use=n/NV,
+               data=res, sub="cnt1", thin=n
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-sumsqcntt-",rtype,runn,".pdf"),
+               width=width,height=hght)
+   
+   asymvar <- c (asymvar, sumsqcnt=list(
+    acv_plots ("sum squared counts", methods, scans,
+               maxlag=16, maxvar=62000, 
+               data=res, sub="sumsqcnt", thin=n
+              )))
+   
+   dev.off()
+   
+   pdf(paste0("runs/potts-8x8-eqt-",rtype,runn,".pdf"),width=width,height=hght)
+   
+   asymvar <- c (asymvar, eq=list(
+    acv_plots ("Equal neighbors", methods, scans,
+               maxlag=13, maxvar=70, 
+               data=res, sub="eq", thin=n
+              )))
+   
+   dev.off()
+ 
+   if (is.null(asv))
+   { asv <- rep (list(array(0,c(dim(asymvar[[1]]),length(runs)))),
+                 length(asymvar))
+     names(asv) <- names(asymvar)
+     for (i in 1:length(asymvar))
+     { rownames(asv[[i]]) <- rownames(asymvar[[i]])
+       colnames(asv[[i]]) <- colnames(asymvar[[i]])
+     }
+   }
+ 
+   for (i in 1:length(asymvar))
+   { asv[[i]][,,runn+1] <- asymvar[[i]]
+   }
+ }
> 
> 
> # PLOT SUMMARIES.
> 
> pdf(paste0("runs/potts-summary-8x8-",rtype,".pdf"),width=6.5,height=8.5)
> 
> summary_plot (asv,
+               methods=rownames(res),
+               orders=colnames(res),
+               ranges=list (cnt1=c(9000,72000,10000),  # Asymp var range & step
+                            sumsqcnt=c(4.5e6,42e6,10e6),
+                            eq=c(5000,26000,5000)),
+               qnames=c(cnt1="Count of 1s",             # Names for display
+                        sumsqcnt="Sum squared counts",
+                        eq="Equal neighbors"))
methods: GS MHGS UNAM DNAM UDNAM ZDNAM 
> 
> dev.off()
null device 
          1 
> 
